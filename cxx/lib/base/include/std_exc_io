// vi:set ft=cpp: -*- Mode: C++ -*-
/**
 * \file
 * \brief Base exceptions std stream operator
 * \ingroup l4cxx_exceptions
 */
/*
 * (c) 2011 Adam Lackorzynski <adam@os.inf.tu-dresden.de>,
 *          Alexander Warg <warg@os.inf.tu-dresden.de>
 *     economic rights: Technische Universit√§t Dresden (Germany)
 *
 * License: see LICENSE.spdx (in this directory or the directories above)
 */
#pragma once

#include <l4/cxx/exceptions>
#include <iostream>

inline
std::ostream &
operator << (std::ostream &o, L4::Base_exception const &e)
{
  o << "Exception: " << e.str() << ", backtrace ...\n";
  for (int i = 0; i < e.frame_count(); ++i)
    o << (void *)(e.pc_array()[i]) << '\n';

  return o;
}

inline
std::ostream &
operator << (std::ostream &o, L4::Runtime_error const &e)
{
  o << "Exception: " << e.str() << ": ";
  if (e.extra_str())
    o << e.extra_str() << ": ";
  o << "backtrace ...\n";
  for (int i = 0; i < e.frame_count(); ++i)
    o << (void *)(e.pc_array()[i]) << '\n';

  return o;
}
